[
  {
    "path": "setup-articles/2021-01-18-node-usage/",
    "title": "Using R on Node",
    "description": "Setup information for using R on a node computer.",
    "author": [
      {
        "name": "Bryan Blanc",
        "url": {}
      }
    ],
    "date": "2021-02-15",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nFirst Steps\r\nDO THIS FIRST – SETTING UP YOUR R PACKAGE LIBRARY\r\nStep 1: Open the Environment Variables Settings for your User Account\r\nStep 2: Create a New Environment Variable\r\nStep 3: Confirm Your New Variable has been Saved\r\nStep 4: Verify Settings in RStudio\r\n\r\n\r\n\r\nFirst Steps\r\nDO THIS FIRST – SETTING UP YOUR R PACKAGE LIBRARY\r\nThe first thing to do before opening RStudio on node is to set your R package library to the shared package library on the G Drive. You will only have to do this once, as the environment variable should be remembered on your user account even if you are using a different node computer. Previously, I recommended you do this by setting the environment variable with a line of R code. This does not appear to have a high enough level of permissions to make sure the change is consistent across node computers, so instead I have laid out steps below to do this through the Windows Control Panel.\r\nStep 1: Open the Environment Variables Settings for your User Account\r\nThe easiest way to access the environment variables settings is to open up Control Panel (within your Start menu), and then search for the settings using the keyword ‘environment’. You will want to click on ‘edit the environment variables’ link to open the dialog, as shown in the screenshot below.\r\nStep 1Step 2: Create a New Environment Variable\r\nClick the ‘New’ button to create a new environment variable. Type in R_LIBS_USER for the variable name and G:/Resources/r_package_library for the variable value. Press OK.\r\nStep 2Step 3: Confirm Your New Variable has been Saved\r\nConfirm your new variable is reflected in the list of user environment variables as below. Press OK to confirm.\r\nStep 3Step 4: Verify Settings in RStudio\r\nYou can verify that this environment variable is set to the correct value you set above anytime by running the following line of code:\r\n\r\n\r\nSys.getenv(x = 'R_LIBS_USER')\r\n\r\n\r\n\r\nStep 4It should return the path you just set above ('G:/Resources/r_package_library') . If it does not for some reason, please contact Bryan Blanc to make him aware of the issue, and he will work with IT to help you resolve the issue.\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-02-16T14:12:42-08:00",
    "input_file": {}
  },
  {
    "path": "setup-articles/2021-01-18-using-r-locally/",
    "title": "Using R Locally",
    "description": "Setup information for using R on your local computer.",
    "author": [
      {
        "name": "Bryan Blanc",
        "url": {}
      }
    ],
    "date": "2021-01-18",
    "categories": [],
    "contents": "\r\n\r\nContents\r\nR/RStudio Setup\r\nHow to Relocate Local R Package Folder\r\n\r\nOther Setup\r\nInstalling and Configuring Git & GitHub\r\nInstalling RTools\r\n\r\nScript Management\r\nFolder Conventions\r\nScript Titleblock Snippet\r\n\r\nShinyApps Web Hosting\r\nManagement Dashboard\r\nManagement Account\r\nPassword\r\nUploading to shinyapps.io\r\n\r\nAWS SQL Server Hosting\r\nGoogle API Access\r\n\r\n\r\nR/RStudio Setup\r\nHow to Relocate Local R Package Folder\r\nThese steps redefine the R user packages folder in R to use a “Local” folder within your R user profile, which for me is: C:/Users/EshelO/Local/R/win-library/3.4.\r\nThe username will need to be modified\r\nThe R version will need to be modified\r\nAny user-writable folder will work; IT has agreed on this as a standard location. The same folder can be used for the ArcGIS default geodatabase, Github repository directory, etc.).\r\nRelocate your existing R user library folder (which for me was in C:/Users/EshelO/Document/R/win-library/3.4 (if Documents has already been migrated, this would be C:/Users/EshelO/OneDrive - Perkins and Will/Documents) to C:/Users/EshelO/Local/R/win-library (or per above)\r\nTest the change:\r\nRun .libPaths(\"C:/Users/EshelO/Local/R/win-library/3.4\") (modifying as necessary) - this is only for your current R session\r\nRun .libPaths() and you should be able to validate this worked\r\nRun a test require() and install.packages() to verify R can both read and install to the new location\r\n\r\n\r\nrequire(dplyr)  \r\ninstall.packages(\"tidycensus\") \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n–>                \r\nOther Setup\r\nInstalling and Configuring Git & GitHub\r\nGit is a version control system, a tool that tracks changes to your code and shares those changes with others. Git is most useful when combined with GitHub, a website that allows you to share your code with the world, solicit improvements via pull requests and track issues. Git + GitHub is the most popular version control system for developers of R packages (thousands of R packages are hosted on GitHub) and many other types of software.\r\nGit and GitHub are generally useful for all software development and data analysis, not just R packages.\r\nTo use Git/GitHub with R, you will need to set up a GitHub account and configure RStudio to interface with GitHub. Detailed instructions for this can be found here.\r\nFile a help ticket with IT to have Git installed.\r\n- To get an Enterprise P+W account: - Create your own personal github account; recommend setting up using your personal e-mail - Email Joel Register your github username and ask to be added to the Nelsonteam - “Could I request to join the enterprise GitHub account? My username is XXXXX.”\r\nInstalling RTools\r\nRTools is a collection of development tools that are essential for writing and releasing packages. The latest RTools package can be downloaded from the CRAN website. File a help ticket to have it installed. If everything goes well, you will have a new directory on your computer called C:/Rtools. More detailed information and instructions can be found here.\r\nScript Management\r\nFolder Conventions\r\nCreate R folder within G: Drive\r\nTalk to GIS team about adding this to the template (Oren to discuss)\r\n\r\nFolder structure\r\nREADME.txt\r\nTitle block for code with author, date, purpose\r\n\r\nAdd shortcuts to P - Analysis\r\nEsther suggests three subfolders:\r\nRaw: shortcuts to G - z.orig\r\nInterim\r\nOutput: shortcut to P – Graphics or SharePoint – Graphics folders\r\n\r\n\r\nStart using R Projects?\r\nAllows relative file paths\r\n\r\nScript Titleblock Snippet\r\nIn R studio go to Tools -> global options –> code –> bottom of page “edit snippets” –> scroll to bottom and paste the below in, change your name in the Author field.\r\n\r\nsnippet header\r\n    ## ---------------------------\r\n    ##\r\n    ## Script name: \r\n    ##\r\n    ## Purpose of script:\r\n    ##\r\n    ## Project Name: \r\n    ##\r\n    ## Project Number: \r\n    ##\r\n    ## Author: Esther Needham\r\n    ##\r\n    ## Date Created: `r paste(Sys.Date())`\r\n    ##\r\n    ## ---------------------------\r\n    ##\r\n    ## Notes:\r\n    ##   \r\n    ##\r\n    ## ---------------------------\r\n    ## set working directory here or make sure there is a .Rproj file\r\n    ## ---------------------------\r\n    options(scipen = 6, digits = 4) # view outputs in non-scientific notation\r\n    ## ---------------------------\r\n    ## load up the packages we will need:  (uncomment as required)\r\n    require(tidyverse)\r\n    require(sf)\r\n    ## ---------------------------\r\n    ## load up functions from other scripts into memory\r\n    # source(\"functions/summarise_data.R\") #example\r\n    ## ---------------------------\r\n\r\nShinyApps Web Hosting\r\nManagement Dashboard\r\nhttps://www.shinyapps.io/admin/#/profile\r\nManagement Account\r\nshinyapps@nelsonnygaard.com\r\nThis account is accessible to various people (Bryan, Tomoko, Esther, Oren)\r\nYou can add it to your email by:\r\nOutlook -> Accounting Settings\r\nEmail Tab -> New\r\nEnter shinyapps@nelsonnygaard.com -> Next\r\nRestart Outlook and you should see the mailbox at the bottom of the left navigation toolbar.\r\n\r\nEmail is also forwarded to each of the above individuals. Forwarding is set up using a server side rule by logging into Outlook 365 web mail. If others need to be added, this can be done by:\r\nLog into Outlook 365 (this link should take you straight to the account)\r\nIf not, go to icon in upper right -> Open Another Mailbox -> Shinyapps@nelsonygaard.com\r\n\r\nSettings icon in upper right of Outlook\r\nMail settings -> Rules\r\n“Shinyapps Email Forwarding” Rule -> Edit Rule\r\n\r\nPassword\r\nOren requested that this account be added to Okta, which hopefully can then be used to save our password.\r\nUploading to shinyapps.io\r\nUse rsconnect package in RStudio to deploy using a token in the Shiny dashboard\r\nIn Shiny Dashboard, go to Account -> tokens -> Show -> Copy to Clipboard\r\nOne-time: paste the commend from the Shiny Dashboard – rsconnect::setaccount…\r\nIn RStudio, run: rsconnect::deployApp()\r\nSet working directory to where Shiny app lives\r\nSetwd… (may need to comment and uncomment)\r\nAWS SQL Server Hosting\r\nHow do we charge costs do a credit card? Bryan needs to hook in a credit card for this.\r\nGoogle API Access\r\nIndividual accounts needed, threshold beyond (~2500 per day) which you are billed per query\r\nAction: re-investigate central account/billing – Oren and/or Tomoko\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-02-15T14:29:46-08:00",
    "input_file": {}
  }
]
